syntax = "proto3";

package surveys;

option csharp_namespace = "SurveyService.Surveys";

service SurveyService {
  rpc CreateSurvey (CreateSurveyRequest) returns (CreateSurveyResponse);
  rpc GetSurvey (GetSurveyRequest) returns (GetSurveyResponse);
  rpc UpdateSurvey (UpdateSurveyRequest) returns (UpdateSurveyResponse);
  rpc DeleteSurvey (DeleteSurveyRequest) returns (DeleteSurveyResponse);
  rpc SubmitSurveyResponse (SubmitSurveyResponseRequest) returns (SubmitSurveyResponseResponse);
  rpc GetSurveyResponses (GetSurveyResponsesRequest) returns (GetSurveyResponsesResponse);
}

message Survey {
  string id = 1;
  string roundtable_id = 2; // Link to a roundtable
  string title = 3;
  string description = 4;
  repeated SurveyQuestion questions = 5;
  // Add other relevant fields like due_date, status etc.
}

message SurveyQuestion {
  string id = 1;
  string text = 2;
  enum QuestionType {
    OPEN_ENDED = 0;
    MULTIPLE_CHOICE = 1;
    SCALE = 2; // e.g., 1-5
  }
  QuestionType question_type = 3;
  repeated string options = 4; // For MULTIPLE_CHOICE
}

message SurveyResponse {
  string id = 1;
  string survey_id = 2;
  string user_id = 3;
  repeated Answer answers = 4;
  // Add timestamp, etc.
}

message Answer {
  string question_id = 1;
  string value = 2; // Could be text for OPEN_ENDED, selected option for MULTIPLE_CHOICE, or number for SCALE
}

// Request and Response messages

message CreateSurveyRequest {
  Survey survey = 1;
}

message CreateSurveyResponse {
  Survey survey = 1;
}

message GetSurveyRequest {
  string id = 1;
}

message GetSurveyResponse {
  Survey survey = 1;
}

message UpdateSurveyRequest {
  Survey survey = 1;
}

message UpdateSurveyResponse {
  Survey survey = 1;
}

message DeleteSurveyRequest {
  string id = 1;
}

message DeleteSurveyResponse {
  bool success = 1;
}

message SubmitSurveyResponseRequest {
  SurveyResponse survey_response = 1;
}

message SubmitSurveyResponseResponse {
  SurveyResponse survey_response = 1;
}

message GetSurveyResponsesRequest {
  string survey_id = 1; // Get all responses for a survey
  string user_id = 2;   // Optional: Get all responses by a specific user
}

message GetSurveyResponsesResponse {
  repeated SurveyResponse survey_responses = 1;
}
